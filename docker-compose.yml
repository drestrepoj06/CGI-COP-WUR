services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
    - app-tier

    
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"      # 外部客户端访问
      - "9093:9093"      # 如果确实需要宿主机访问
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # 监听器配置（容器内通信优先）
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      # 关键优化参数
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE: "true"  # 开发环境允许非同步选举
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1           # 显式设置默认副本数
      # 日志保留策略（可选）
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_RETENTION_BYTES: -1
    healthcheck:
      test: ["CMD-SHELL", "kafka-broker-api-versions --bootstrap-server kafka:9092"]
      interval: 5s
      timeout: 10s
      retries: 20     # 最长等待 100 秒（确保 Kafka 完全启动）
    networks:
      - app-tier

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: "local"
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - kafka

  tile38-leader:
    image: tile38/tile38:1.34.1
    container_name: tile38-leader
    command: >
      /bin/sh -c 'mkdir -p tmp/data &&
                  echo "{\"logconfig\":{\"level\":\"debug\",\"encoding\":\"json\",\"outputPaths\":[\"stdout\"],\"errorOutputPaths\":[\"stderr\"],\"encoderConfig\": {\"messageKey\":\"message\",\"levelKey\":\"level\",\"levelEncoder\":\"lowercase\", \"timeKey\":\"timestamp\",\"timeEncoder\":\"ISO8601\"}}}"> tmp/data/config
                  tile38-server -d tmp/data -vv -p 9851 -l json'
    ports:
      - 9851:9851
    volumes:
      - tile38-data:/tmp/data

  python-backend:
    build: ./python_backend
    working_dir: /backend
    volumes:
      - ./python_backend:/backend
    depends_on:
      - kafka
      - tile38-leader
    environment:
      KAFKA_BROKER: kafka:9092
      TILE38_URL: "http://tile38-leader:9851"

networks:
  app-tier:
    driver: bridge

volumes:
  tile38-data:
  kafka_data: