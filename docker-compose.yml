services:
  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"


  kafka:
    image: bitnami/kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"


  kafka-ui:  
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:9092


  tile38-leader:
    image: tile38/tile38:1.34.1
    container_name: tile38-leader
    command: >
      /bin/sh -c 'mkdir -p tmp/data &&
                  echo "{\"logconfig\":{\"level\":\"debug\",\"encoding\":\"json\",\"outputPaths\":[\"stdout\"],\"errorOutputPaths\":[\"stderr\"],\"encoderConfig\": {\"messageKey\":\"message\",\"levelKey\":\"level\",\"levelEncoder\":\"lowercase\", \"timeKey\":\"timestamp\",\"timeEncoder\":\"ISO8601\"}}}"> tmp/data/config
                  tile38-server -d tmp/data -vv -p 9851 -l json'
    ports:
      - 9851:9851
    volumes:
      - tile38-data:/tmp/data


  python-backend:  
    build: ./python_backend
    volumes:
      - ./python_backend:/backend 
    depends_on:
      - kafka
      - tile38-leader  
    environment:
      KAFKA_BROKER: kafka:9092
      TOPIC: python_events
      MODE: "producer"
      TILE38_URL: "http://tile38-leader:9851" 


volumes:
  tile38-data:



